import os
import pandas

include: "../Snakefile_config"
include: "Snakefile_prunePlink"
    
DIRECTORIES.update({
    'eqtlIndexDir' : "gregorRun/index_snpFiles",
    'gregorRun' : "gregorRun"
})

SCRIPTS = {
    'makeConfFile' : "scripts/gregor_makeConf.py",
    'plot' : "scripts/plotEnrichment_bulk.R",
    'compile_df' : "scripts/makeDataFrame_gregor.py"
}

PARAMETERS = {
    'fdr' : 0.1,
    'mafThreshold' : 0.0,
    'pruneR2Threshold' : 0.8,
    'POPULATION' : "EUR",
    'gregorR2Threshold' : 0.99,
    'cores': 10
}

base = "GTExv7.{fdr}.prune{r2}.maf{maf}".format(fdr=PARAMETERS['fdr'], r2=PARAMETERS['pruneR2Threshold'], maf=PARAMETERS['mafThreshold'])

rule final:
    """
    GTEx v7 eQTL set:
    1. Select eGenes at 10% FDR
    2. Prune for LD r2 < 0.8
    3. run GREGOR
    4. plot
    """
    input:
        expand(os.path.join(DIRECTORIES['figures'], "fig.enrichmentGtexBulk_{base}.pdf"), base=base)
        
        
rule setupGREGOR:
    input:
        eqtlfile = os.path.join(DIRECTORIES['intermediateFiles'], "{base}.dat"),
        annotations = expand(DATA['annotations'], cell=CELLS, region=REGIONS)
    output:
        snpfile = os.path.join(DIRECTORIES['eqtlIndexDir'], "{base}.txt"),
        bedfile = os.path.join(DIRECTORIES['gregorRun'], "bedfileIndex.{base}.txt"),
        conf = os.path.join(DIRECTORIES['gregorRun'], "enrich.{base}.conf"),
    params:
        script = SCRIPTS['makeConfFile'],
        gregorR2Threshold = PARAMETERS['gregorR2Threshold'],
        outputdir = os.path.join(DIRECTORIES['gregorRun'], "output_{base}"),
        cores = PARAMETERS['cores']
    shell:
        r"""
        less {input.eqtlfile} | grep -v chrom | awk '{{print "chr"$4":"$5}}' | sort | uniq > {output.snpfile} ;
        python {params.script} --conffile {output.conf} --snpfile {output.snpfile} --bedfile {output.bedfile} --gregorR2Threshold {params.gregorR2Threshold} --cores {params.cores} --outputdir {params.outputdir} --annotfiles {input.annotations};
        """

rule runGREGOR:
    input:
        conf = rules.setupGREGOR.output.conf
    output:
        os.path.join(DIRECTORIES['gregorRun'], "output_{base}", "StatisticSummaryFile.txt")
    params:
        versionPath = GREGOR_SCRIPT_PATH
    shell:
        r"""
        ionice -c2 -n7 {params.versionPath} --conf {input.conf}
        """

rule compileGREGORdataframe:
    input:
        rules.runGREGOR.output
    output:
        main = os.path.join(DIRECTORIES['intermediateFiles'], "stats.{base}.dat"),
    params:
        script = SCRIPTS['compile_df'], 
        nameFieldSeparator = ".",
        jobFieldSeparator = ".",
        header = "eqtl fdr0 fdr prune pruner2 maf mafval cell annotation feature overlap expected_overlap pval"
    shell:
        r"""
        python {params.script} --filename {input} --outputfilename {output.main} --nameFieldSeparator {params.nameFieldSeparator} --jobFieldSeparator {params.jobFieldSeparator} --header {params.header}
        """

rule plot:
    input:
        rules.compileGREGORdataframe.output
    output:
        os.path.join(DIRECTORIES['figures'], "fig.enrichmentGtexBulk_{base}.pdf")
    params:
        script = SCRIPTS['plot']
    shell:
        r"""
        Rscript {params.script} {input} {output}
        """
        
        
